{
  "description": "SubscriptionList is a list of Subscription",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "operators.coreos.com/v1alpha1"
      ]
    },
    "items": {
      "description": "List of subscriptions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Subscription keeps operators up to date by tracking changes to Catalogs.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "metadata",
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "operators.coreos.com/v1alpha1"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "Subscription"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "description": "SubscriptionSpec defines an Application that can be installed",
            "type": "object",
            "required": [
              "name",
              "source",
              "sourceNamespace"
            ],
            "properties": {
              "channel": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "config": {
                "description": "SubscriptionConfig contains configuration specified for a subscription.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "env": {
                    "description": "Env is a list of environment variables to set in the container. Cannot be updated.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "EnvVar represents an environment variable present in a Container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "valueFrom": {
                          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key of a ConfigMap.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "fieldRef": {
                              "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "fieldPath": {
                                  "description": "Path of the field to select in the specified API version.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "resourceFieldRef": {
                              "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "description": "Container name: required for volumes, optional for env vars",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "divisor": {
                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "description": "Required: resource to select",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "secretKeyRef": {
                              "description": "Selects a key of a secret in the pod's namespace",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "description": "EnvFrom is a list of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Immutable.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "EnvFromSource represents the source of a set of ConfigMaps",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "configMapRef": {
                          "description": "The ConfigMap to select from",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "prefix": {
                          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "secretRef": {
                          "description": "The Secret to select from",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the Secret must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "nodeSelector": {
                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "resources": {
                    "description": "Resources represents compute resources required by this container. Immutable. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "limits": {
                        "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "selector": {
                    "description": "Selector is the label selector for pods to be configured. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key",
                            "operator"
                          ],
                          "properties": {
                            "key": {
                              "description": "key is the label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "matchLabels": {
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "tolerations": {
                    "description": "Tolerations are the pod's tolerations.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "effect": {
                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "key": {
                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "operator": {
                          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "tolerationSeconds": {
                          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "value": {
                          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "volumeMounts": {
                    "description": "List of VolumeMounts to set in the container.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "VolumeMount describes a mounting of a Volume within a container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                          "type": "string"
                        },
                        "mountPropagation": {
                          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "This must match the Name of a Volume.",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "subPath": {
                          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "subPathExpr": {
                          "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "volumes": {
                    "description": "List of Volumes to set in the podSpec.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "awsElasticBlockStore": {
                          "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "partition": {
                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "readOnly": {
                              "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "volumeID": {
                              "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "azureDisk": {
                          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "diskName",
                            "diskURI"
                          ],
                          "properties": {
                            "cachingMode": {
                              "description": "Host Caching mode: None, Read Only, Read Write.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "diskName": {
                              "description": "The Name of the data disk in the blob storage",
                              "type": "string"
                            },
                            "diskURI": {
                              "description": "The URI the data disk in the blob storage",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "azureFile": {
                          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "secretName",
                            "shareName"
                          ],
                          "properties": {
                            "readOnly": {
                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretName": {
                              "description": "the name of secret that contains Azure Storage Account Name and Key",
                              "type": "string"
                            },
                            "shareName": {
                              "description": "Share Name",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "cephfs": {
                          "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "monitors"
                          ],
                          "properties": {
                            "monitors": {
                              "description": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "path": {
                              "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretFile": {
                              "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "user": {
                              "description": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "cinder": {
                          "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "volumeID": {
                              "description": "volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "configMap": {
                          "description": "ConfigMap represents a configMap that should populate this volume",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "defaultMode": {
                              "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "items": {
                              "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its keys must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "csi": {
                          "description": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "driver"
                          ],
                          "properties": {
                            "driver": {
                              "description": "Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "nodePublishSecretRef": {
                              "description": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "readOnly": {
                              "description": "Specifies a read-only configuration for the volume. Defaults to false (read/write).",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "volumeAttributes": {
                              "description": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "downwardAPI": {
                          "description": "DownwardAPI represents downward API about the pod that should populate this volume",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "defaultMode": {
                              "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "items": {
                              "description": "Items is a list of downward API volume file",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "fieldRef": {
                                    "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "mode": {
                                    "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                    "type": "string"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "emptyDir": {
                          "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "medium": {
                              "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "sizeLimit": {
                              "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "ephemeral": {
                          "description": "Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. \n Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. \n Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. \n A pod can use both types of ephemeral volumes and persistent volumes at the same time. \n This is a beta feature and only available when the GenericEphemeralVolume feature gate is enabled.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "volumeClaimTemplate": {
                              "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). \n An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. \n This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. \n Required, must not be nil.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "spec"
                              ],
                              "properties": {
                                "metadata": {
                                  "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                },
                                "spec": {
                                  "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.",
                                  "type": "object",
                                  "properties": {
                                    "accessModes": {
                                      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "dataSource": {
                                      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "kind": {
                                          "description": "Kind is the type of resource being referenced",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the name of resource being referenced",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "dataSourceRef": {
                                      "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "kind": {
                                          "description": "Kind is the type of resource being referenced",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the name of resource being referenced",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "resources": {
                                      "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "limits": {
                                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "requests": {
                                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "selector": {
                                      "description": "A label query over volumes to consider for binding.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "matchExpressions": {
                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "key",
                                              "operator"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "key is the label key that the selector applies to.",
                                                "type": "string"
                                              },
                                              "operator": {
                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                "type": "string"
                                              },
                                              "values": {
                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                }
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "matchLabels": {
                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "storageClassName": {
                                      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "volumeMode": {
                                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "volumeName": {
                                      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "fc": {
                          "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "lun": {
                              "description": "Optional: FC target lun number",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "readOnly": {
                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "targetWWNs": {
                              "description": "Optional: FC target worldwide names (WWNs)",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "wwids": {
                              "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "flexVolume": {
                          "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "driver"
                          ],
                          "properties": {
                            "driver": {
                              "description": "Driver is the name of the driver to use for this volume.",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "options": {
                              "description": "Optional: Extra command options if any.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "readOnly": {
                              "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "flocker": {
                          "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "datasetName": {
                              "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "datasetUUID": {
                              "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "gcePersistentDisk": {
                          "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "pdName"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "partition": {
                              "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "pdName": {
                              "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "gitRepo": {
                          "description": "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "repository"
                          ],
                          "properties": {
                            "directory": {
                              "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "repository": {
                              "description": "Repository URL",
                              "type": "string"
                            },
                            "revision": {
                              "description": "Commit hash for the specified revision.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "glusterfs": {
                          "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "endpoints",
                            "path"
                          ],
                          "properties": {
                            "endpoints": {
                              "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "hostPath": {
                          "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "path": {
                              "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "iscsi": {
                          "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "iqn",
                            "lun",
                            "targetPortal"
                          ],
                          "properties": {
                            "chapAuthDiscovery": {
                              "description": "whether support iSCSI Discovery CHAP authentication",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "chapAuthSession": {
                              "description": "whether support iSCSI Session CHAP authentication",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "fsType": {
                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "initiatorName": {
                              "description": "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "iqn": {
                              "description": "Target iSCSI Qualified Name.",
                              "type": "string"
                            },
                            "iscsiInterface": {
                              "description": "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "lun": {
                              "description": "iSCSI Target Lun number.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "portals": {
                              "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "readOnly": {
                              "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "CHAP Secret for iSCSI target and initiator authentication",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "targetPortal": {
                              "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "name": {
                          "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "nfs": {
                          "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "path",
                            "server"
                          ],
                          "properties": {
                            "path": {
                              "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "server": {
                              "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "persistentVolumeClaim": {
                          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "claimName"
                          ],
                          "properties": {
                            "claimName": {
                              "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "photonPersistentDisk": {
                          "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "pdID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "pdID": {
                              "description": "ID that identifies Photon Controller persistent disk",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "portworxVolume": {
                          "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "volumeID": {
                              "description": "VolumeID uniquely identifies a Portworx volume",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "projected": {
                          "description": "Items for all in one resources secrets, configmaps, and downward API",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "defaultMode": {
                              "description": "Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "sources": {
                              "description": "list of volume projections",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "Projection that may be projected along with other supported volume types",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "configMap": {
                                    "description": "information about the configMap data to project",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "items": {
                                        "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "description": "Maps a string key to a path within a volume.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "required": [
                                            "key",
                                            "path"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "The key to project.",
                                              "type": "string"
                                            },
                                            "mode": {
                                              "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "type": [
                                                "integer",
                                                "null"
                                              ],
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "name": {
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its keys must be defined",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "downwardAPI": {
                                    "description": "information about the downwardAPI data to project",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "items": {
                                        "description": "Items is a list of DownwardAPIVolume file",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "required": [
                                            "path"
                                          ],
                                          "properties": {
                                            "fieldRef": {
                                              "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "required": [
                                                "fieldPath"
                                              ],
                                              "properties": {
                                                "apiVersion": {
                                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "fieldPath": {
                                                  "description": "Path of the field to select in the specified API version.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "mode": {
                                              "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "type": [
                                                "integer",
                                                "null"
                                              ],
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                              "type": "string"
                                            },
                                            "resourceFieldRef": {
                                              "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "required": [
                                                "resource"
                                              ],
                                              "properties": {
                                                "containerName": {
                                                  "description": "Container name: required for volumes, optional for env vars",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "divisor": {
                                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "resource": {
                                                  "description": "Required: resource to select",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "secret": {
                                    "description": "information about the secret data to project",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "items": {
                                        "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "description": "Maps a string key to a path within a volume.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "required": [
                                            "key",
                                            "path"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "The key to project.",
                                              "type": "string"
                                            },
                                            "mode": {
                                              "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                              "type": [
                                                "integer",
                                                "null"
                                              ],
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "name": {
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "serviceAccountToken": {
                                    "description": "information about the serviceAccountToken data to project",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "audience": {
                                        "description": "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "expirationSeconds": {
                                        "description": "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int64"
                                      },
                                      "path": {
                                        "description": "Path is the path relative to the mount point of the file to project the token into.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "quobyte": {
                          "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "registry",
                            "volume"
                          ],
                          "properties": {
                            "group": {
                              "description": "Group to map volume access to Default is no group",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "registry": {
                              "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                              "type": "string"
                            },
                            "tenant": {
                              "description": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user": {
                              "description": "User to map volume access to Defaults to serivceaccount user",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "volume": {
                              "description": "Volume is a string that references an already created Quobyte volume by name.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "rbd": {
                          "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "image",
                            "monitors"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "image": {
                              "description": "The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string"
                            },
                            "keyring": {
                              "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "monitors": {
                              "description": "A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "pool": {
                              "description": "The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "user": {
                              "description": "The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "scaleIO": {
                          "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "gateway",
                            "secretRef",
                            "system"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "gateway": {
                              "description": "The host address of the ScaleIO API Gateway.",
                              "type": "string"
                            },
                            "protectionDomain": {
                              "description": "The name of the ScaleIO Protection Domain for the configured storage.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "sslEnabled": {
                              "description": "Flag to enable/disable SSL communication with Gateway, default false",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "storageMode": {
                              "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "storagePool": {
                              "description": "The ScaleIO Storage Pool associated with the protection domain.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "system": {
                              "description": "The name of the storage system as configured in ScaleIO.",
                              "type": "string"
                            },
                            "volumeName": {
                              "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "secret": {
                          "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "defaultMode": {
                              "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "items": {
                              "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its keys must be defined",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretName": {
                              "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "storageos": {
                          "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "readOnly": {
                              "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "volumeName": {
                              "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "volumeNamespace": {
                              "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "vsphereVolume": {
                          "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "volumePath"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "storagePolicyID": {
                              "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "storagePolicyName": {
                              "description": "Storage Policy Based Management (SPBM) profile name.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "volumePath": {
                              "description": "Path that identifies vSphere volume vmdk",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "installPlanApproval": {
                "description": "Approval is the user approval policy for an InstallPlan. It must be one of \"Automatic\" or \"Manual\".",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "sourceNamespace": {
                "type": "string"
              },
              "startingCSV": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "status": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastUpdated"
            ],
            "properties": {
              "catalogHealth": {
                "description": "CatalogHealth contains the Subscription's view of its relevant CatalogSources' status. It is used to determine SubscriptionStatusConditions related to CatalogSources.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "SubscriptionCatalogHealth describes the health of a CatalogSource the Subscription knows about.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "catalogSourceRef",
                    "healthy",
                    "lastUpdated"
                  ],
                  "properties": {
                    "catalogSourceRef": {
                      "description": "CatalogSourceRef is a reference to a CatalogSource.",
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "description": "API version of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "fieldPath": {
                          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "kind": {
                          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "resourceVersion": {
                          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "uid": {
                          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "healthy": {
                      "description": "Healthy is true if the CatalogSource is healthy; false otherwise.",
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "description": "LastUpdated represents the last time that the CatalogSourceHealth changed",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "conditions": {
                "description": "Conditions is a list of the latest available observations about a Subscription's current state.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "SubscriptionCondition represents the latest available observations of a Subscription's state.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastHeartbeatTime": {
                      "description": "LastHeartbeatTime is the last time we got an update on a given condition",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    },
                    "lastTransitionTime": {
                      "description": "LastTransitionTime is the last time the condition transit from one status to another",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    },
                    "message": {
                      "description": "Message is a human-readable message indicating details about last transition.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "reason": {
                      "description": "Reason is a one-word CamelCase reason for the condition's last transition.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "description": "Status is the status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type is the type of Subscription condition.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "currentCSV": {
                "description": "CurrentCSV is the CSV the Subscription is progressing to.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "installPlanGeneration": {
                "description": "InstallPlanGeneration is the current generation of the installplan",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "installPlanRef": {
                "description": "InstallPlanRef is a reference to the latest InstallPlan that contains the Subscription's current CSV.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "installedCSV": {
                "description": "InstalledCSV is the CSV currently installed by the Subscription.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "installplan": {
                "description": "Install is a reference to the latest InstallPlan generated for the Subscription. DEPRECATED: InstallPlanRef",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "apiVersion",
                  "kind",
                  "name",
                  "uuid"
                ],
                "properties": {
                  "apiVersion": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "uuid": {
                    "description": "UID is a type that holds unique ID values, including UUIDs.  Because we don't ONLY use UUIDs, this is an alias to string.  Being a type captures intent and helps make sure that UIDs and names do not get conflated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "lastUpdated": {
                "description": "LastUpdated represents the last time that the Subscription status was updated.",
                "type": "string",
                "format": "date-time"
              },
              "reason": {
                "description": "Reason is the reason the Subscription was transitioned to its current state.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "state": {
                "description": "State represents the current state of the Subscription",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "operators.coreos.com",
            "kind": "Subscription",
            "version": "v1alpha1"
          }
        ],
        "additionalProperties": false
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "SubscriptionList"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "operators.coreos.com",
      "kind": "SubscriptionList",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}