{
  "description": "BuildVolume describes a volume that is made available to build pods, such that it can be mounted into buildah's runtime environment. Only a subset of Kubernetes Volume sources are supported.",
  "type": "object",
  "required": [
    "name",
    "source",
    "mounts"
  ],
  "properties": {
    "mounts": {
      "description": "mounts represents the location of the volume in the image build container",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "BuildVolumeMount describes the mounting of a Volume within buildah's runtime environment.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "destinationPath"
        ],
        "properties": {
          "destinationPath": {
            "description": "destinationPath is the path within the buildah runtime environment at which the volume should be mounted. The transient mount within the build image and the backing volume will both be mounted read only. Must be an absolute path, must not contain '..' or ':', and must not collide with a destination path generated by the builder process Paths that collide with those added by the build controller will result in a failed build with an error message detailing which path caused the error.",
            "type": "string"
          }
        }
      },
      "x-kubernetes-list-map-keys": [
        "destinationPath"
      ],
      "x-kubernetes-list-type": "map",
      "x-kubernetes-patch-merge-key": "destinationPath",
      "x-kubernetes-patch-strategy": "merge"
    },
    "name": {
      "description": "name is a unique identifier for this BuildVolume. It must conform to the Kubernetes DNS label standard and be unique within the pod. Names that collide with those added by the build controller will result in a failed build with an error message detailing which name caused the error. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": [
        "string",
        "null"
      ]
    },
    "source": {
      "description": "BuildVolumeSource represents the source of a volume to mount Only one of its supported types may be specified at any given time.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "type"
      ],
      "properties": {
        "configMap": {
          "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "defaultMode": {
              "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "items": {
              "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "Maps a string key to a path within a volume.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "path"
                ],
                "properties": {
                  "key": {
                    "description": "The key to project.",
                    "type": "string"
                  },
                  "mode": {
                    "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32"
                  },
                  "path": {
                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                    "type": "string"
                  }
                }
              }
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "optional": {
              "description": "Specify whether the ConfigMap or its keys must be defined",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "secret": {
          "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "defaultMode": {
              "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "items": {
              "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "Maps a string key to a path within a volume.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "path"
                ],
                "properties": {
                  "key": {
                    "description": "The key to project.",
                    "type": "string"
                  },
                  "mode": {
                    "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32"
                  },
                  "path": {
                    "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                    "type": "string"
                  }
                }
              }
            },
            "optional": {
              "description": "Specify whether the Secret or its keys must be defined",
              "type": [
                "boolean",
                "null"
              ]
            },
            "secretName": {
              "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "type": {
          "description": "type is the BuildVolumeSourceType for the volume source. Type must match the populated volume source. Valid types are: Secret, ConfigMap",
          "type": "string"
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}