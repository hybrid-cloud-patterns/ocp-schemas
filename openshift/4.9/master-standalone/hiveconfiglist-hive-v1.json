{
  "description": "HiveConfigList is a list of HiveConfig",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "hive.openshift.io/v1"
      ]
    },
    "items": {
      "description": "List of hiveconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "HiveConfig is the Schema for the hives API",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "hive.openshift.io/v1"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "HiveConfig"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  }
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "spec": {
            "description": "HiveConfigSpec defines the desired state of Hive",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "additionalCertificateAuthoritiesSecretRef": {
                "description": "AdditionalCertificateAuthoritiesSecretRef is a list of references to secrets in the TargetNamespace that contain an additional Certificate Authority to use when communicating with target clusters. These certificate authorities will be used in addition to any self-signed CA generated by each cluster on installation.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "argoCDConfig": {
                "description": "ArgoCD specifies configuration for ArgoCD integration. If enabled, Hive will automatically add provisioned clusters to ArgoCD, and remove them when they are deprovisioned.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "description": "Enabled dictates if ArgoCD gitops integration is enabled. If not specified, the default is disabled.",
                    "type": "boolean"
                  },
                  "namespace": {
                    "description": "Namespace specifies the namespace where ArgoCD is installed. Used for the location of cluster secrets. Defaults to \"argocd\"",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "awsPrivateLink": {
                "description": "AWSPrivateLink defines the configuration for the aws-private-link controller. It provides 3 major pieces of information required by the controller, 1. The Credentials that should be used to create AWS PrivateLink resources other than     what exist in the customer's account. 2. A list of VPCs that can be used by the controller to choose one to create AWS VPC Endpoints     for the AWS VPC Endpoint Services created for ClusterDeployments in their     corresponding regions. 3. A list of VPCs that should be able to resolve the DNS addresses setup for Private Link.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "credentialsSecretRef"
                ],
                "properties": {
                  "associatedVPCs": {
                    "description": "AssociatedVPCs is the list of VPCs that should be able to resolve the DNS addresses setup for Private Link. This allows clients in VPC to resolve the AWS PrivateLink address using AWS's default DNS resolver for Private Route53 Hosted Zones. \n This list should at minimum include the VPC where the current Hive controller is running.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "AWSAssociatedVPC defines a VPC that should be able to resolve the DNS addresses setup for Private Link.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "region",
                        "vpcID"
                      ],
                      "properties": {
                        "credentialsSecretRef": {
                          "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with AWS for associating the VPC with the Private HostedZone created for PrivateLink. When not provided, the common credentials for the controller should be used.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "region": {
                          "type": "string"
                        },
                        "vpcID": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "credentialsSecretRef": {
                    "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with AWS for creating the resources for AWS PrivateLink.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "dnsRecordType": {
                    "description": "DNSRecordType defines what type of DNS record should be created in Private Hosted Zone for the customer cluster's API endpoint (which is the VPC Endpoint's regional DNS name).",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "Alias",
                      "ARecord"
                    ]
                  },
                  "endpointVPCInventory": {
                    "description": "EndpointVPCInventory is a list of VPCs and the corresponding subnets in various AWS regions. The controller uses this list to choose a VPC for creating AWS VPC Endpoints. Since the VPC Endpoints must be in the same region as the ClusterDeployment, we must have VPCs in that region to be able to setup Private Link.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "AWSPrivateLinkInventory is a VPC and its corresponding subnets in an AWS region. This VPC will be used to create an AWS VPC Endpoint whenever there is a VPC Endpoint Service created for a ClusterDeployment.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "region",
                        "subnets",
                        "vpcID"
                      ],
                      "properties": {
                        "region": {
                          "type": "string"
                        },
                        "subnets": {
                          "type": "array",
                          "items": {
                            "description": "AWSPrivateLinkSubnet defines a subnet in the an AWS VPC.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "availabilityZone",
                              "subnetID"
                            ],
                            "properties": {
                              "availabilityZone": {
                                "type": "string"
                              },
                              "subnetID": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "vpcID": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "backup": {
                "description": "Backup specifies configuration for backup integration. If absent, backup integration will be disabled.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "minBackupPeriodSeconds": {
                    "description": "MinBackupPeriodSeconds specifies that a minimum of MinBackupPeriodSeconds will occur in between each backup. This is used to rate limit backups. This potentially batches together multiple changes into 1 backup. No backups will be lost as changes that happen during this interval are queued up and will result in a backup happening once the interval has been completed.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "velero": {
                    "description": "Velero specifies configuration for the Velero backup integration.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "enabled": {
                        "description": "Enabled dictates if Velero backup integration is enabled. If not specified, the default is disabled.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "namespace": {
                        "description": "Namespace specifies in which namespace velero backup objects should be created. If not specified, the default is a namespace named \"velero\".",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "controllersConfig": {
                "description": "ControllersConfig is used to configure different hive controllers",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "controllers": {
                    "description": "Controllers contains a list of configurations for different controllers",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "SpecificControllerConfig contains the configuration for a specific controller",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "config",
                        "name"
                      ],
                      "properties": {
                        "config": {
                          "description": "ControllerConfig contains the configuration for the controller specified by Name field",
                          "type": "object",
                          "properties": {
                            "clientBurst": {
                              "description": "ClientBurst specifies client rate limiter burst for a controller",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "clientQPS": {
                              "description": "ClientQPS specifies client rate limiter QPS for a controller",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "concurrentReconciles": {
                              "description": "ConcurrentReconciles specifies number of concurrent reconciles for a controller",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "queueBurst": {
                              "description": "QueueBurst specifies workqueue rate limiter burst for a controller",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "queueQPS": {
                              "description": "QueueQPS specifies workqueue rate limiter QPS for a controller",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "replicas": {
                              "description": "Replicas specifies the number of replicas the specific controller pod should use. This is ONLY for controllers that have been split out into their own pods. This is ignored for all others.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            }
                          }
                        },
                        "name": {
                          "description": "Name specifies the name of the controller",
                          "type": "string",
                          "enum": [
                            "clusterDeployment",
                            "clusterrelocate",
                            "clusterstate",
                            "clusterversion",
                            "controlPlaneCerts",
                            "dnsendpoint",
                            "dnszone",
                            "remoteingress",
                            "remotemachineset",
                            "syncidentityprovider",
                            "unreachable",
                            "velerobackup",
                            "clusterprovision",
                            "clusterDeprovision",
                            "clusterpool",
                            "clusterpoolnamespace",
                            "hibernation",
                            "clusterclaim",
                            "metrics",
                            "clustersync"
                          ]
                        }
                      }
                    }
                  },
                  "default": {
                    "description": "Default specifies default configuration for all the controllers, can be used to override following coded defaults default for concurrent reconciles is 5 default for client qps is 5 default for client burst is 10 default for queue qps is 10 default for queue burst is 100",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "clientBurst": {
                        "description": "ClientBurst specifies client rate limiter burst for a controller",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "clientQPS": {
                        "description": "ClientQPS specifies client rate limiter QPS for a controller",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "concurrentReconciles": {
                        "description": "ConcurrentReconciles specifies number of concurrent reconciles for a controller",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "queueBurst": {
                        "description": "QueueBurst specifies workqueue rate limiter burst for a controller",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "queueQPS": {
                        "description": "QueueQPS specifies workqueue rate limiter QPS for a controller",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "replicas": {
                        "description": "Replicas specifies the number of replicas the specific controller pod should use. This is ONLY for controllers that have been split out into their own pods. This is ignored for all others.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      }
                    }
                  }
                }
              },
              "deleteProtection": {
                "description": "DeleteProtection can be set to \"enabled\" to turn on automatic delete protection for ClusterDeployments. When enabled, Hive will add the \"hive.openshift.io/protected-delete\" annotation to new ClusterDeployments. Once a ClusterDeployment has been installed, a user must remove the annotation from a ClusterDeployment prior to deleting it.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "enabled"
                ]
              },
              "deprovisionsDisabled": {
                "description": "DeprovisionsDisabled can be set to true to block deprovision jobs from running.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "disabledControllers": {
                "description": "DisabledControllers allows selectively disabling Hive controllers by name. The name of an individual controller matches the name of the controller as seen in the Hive logging output.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "failedProvisionConfig": {
                "description": "FailedProvisionConfig is used to configure settings related to handling provision failures.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "aws": {
                    "description": "FailedProvisionAWSConfig contains AWS-specific info to upload log files.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "credentialsSecretRef"
                    ],
                    "properties": {
                      "bucket": {
                        "description": "Bucket is the S3 bucket to store the logs in.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "credentialsSecretRef": {
                        "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with AWS S3. It will need permission to upload logs to S3. Secret should have keys named aws_access_key_id and aws_secret_access_key that contain the AWS credentials. Example Secret:   data:     aws_access_key_id: minio     aws_secret_access_key: minio123",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "region": {
                        "description": "Region is the AWS region to use for S3 operations. This defaults to us-east-1. For AWS China, use cn-northwest-1.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "serviceEndpoint": {
                        "description": "ServiceEndpoint is the url to connect to an S3 compatible provider.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "skipGatherLogs": {
                    "description": "DEPRECATED: This flag is no longer respected and will be removed in the future.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                }
              },
              "featureGates": {
                "description": "FeatureGateSelection allows selecting feature gates for the controller.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "custom": {
                    "description": "custom allows the enabling or disabling of any feature. Because of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations might cause unknown behavior. featureSet must equal \"Custom\" must be set to use this field."
                  },
                  "featureSet": {
                    "description": "featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "",
                      "Custom"
                    ]
                  }
                }
              },
              "globalPullSecretRef": {
                "description": "GlobalPullSecretRef is used to specify a pull secret that will be used globally by all of the cluster deployments. For each cluster deployment, the contents of GlobalPullSecret will be merged with the specific pull secret for a cluster deployment(if specified), with precedence given to the contents of the pull secret for the cluster deployment. The global pull secret is assumed to be in the TargetNamespace.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "logLevel": {
                "description": "LogLevel is the level of logging to use for the Hive controllers. Acceptable levels, from coarsest to finest, are panic, fatal, error, warn, info, debug, and trace. The default level is info.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "maintenanceMode": {
                "description": "MaintenanceMode can be set to true to disable the hive controllers in situations where we need to ensure nothing is running that will add or act upon finalizers on Hive types. This should rarely be needed. Sets replicas to 0 for the hive-controllers deployment to accomplish this.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "managedDomains": {
                "description": "ManagedDomains is the list of DNS domains that are managed by the Hive cluster When specifying 'manageDNS: true' in a ClusterDeployment, the ClusterDeployment's baseDomain should be a direct child of one of these domains, otherwise the ClusterDeployment creation will result in a validation error.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManageDNSConfig contains the domain being managed, and the cloud-specific details for accessing/managing the domain.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "domains"
                  ],
                  "properties": {
                    "aws": {
                      "description": "AWS contains AWS-specific settings for external DNS",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "credentialsSecretRef"
                      ],
                      "properties": {
                        "credentialsSecretRef": {
                          "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with AWS Route53. It will need permission to manage entries for the domain listed in the parent ManageDNSConfig object. Secret should have AWS keys named 'aws_access_key_id' and 'aws_secret_access_key'.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "region": {
                          "description": "Region is the AWS region to use for route53 operations. This defaults to us-east-1. For AWS China, use cn-northwest-1.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "azure": {
                      "description": "Azure contains Azure-specific settings for external DNS",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "credentialsSecretRef",
                        "resourceGroupName"
                      ],
                      "properties": {
                        "cloudName": {
                          "description": "CloudName is the name of the Azure cloud environment which can be used to configure the Azure SDK with the appropriate Azure API endpoints. If empty, the value is equal to \"AzurePublicCloud\".",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "",
                            "AzurePublicCloud",
                            "AzureUSGovernmentCloud",
                            "AzureChinaCloud",
                            "AzureGermanCloud"
                          ]
                        },
                        "credentialsSecretRef": {
                          "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with Azure DNS. It wil need permission to manage entries in each of the managed domains listed in the parent ManageDNSConfig object. Secret should have a key named 'osServicePrincipal.json'",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "resourceGroupName": {
                          "description": "ResourceGroupName specifies the Azure resource group containing the DNS zones for the domains being managed.",
                          "type": "string"
                        }
                      }
                    },
                    "domains": {
                      "description": "Domains is the list of domains that hive will be managing entries for with the provided credentials.",
                      "type": "array",
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "gcp": {
                      "description": "GCP contains GCP-specific settings for external DNS",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "credentialsSecretRef"
                      ],
                      "properties": {
                        "credentialsSecretRef": {
                          "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with GCP DNS. It will need permission to manage entries in each of the managed domains for this cluster. listed in the parent ManageDNSConfig object. Secret should have a key named 'osServiceAccount.json'. The credentials must specify the project to use.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "releaseImageVerificationConfigMapRef": {
                "description": "ReleaseImageVerificationConfigMapRef is a reference to the ConfigMap that will be used to verify release images. \n The config map structure is exactly the same as the config map used for verification of release images for OpenShift 4 during upgrades. Therefore you can usually set this to the config map shipped as part of OpenShift (openshift-config-managed/release-verification). \n See https://github.com/openshift/cluster-update-keys for more details. The keys within the config map in the data field define how verification is performed: \n verifier-public-key-*: One or more GPG public keys in ASCII form that must have signed the                        release image by digest. \n store-*: A URL (scheme file://, http://, or https://) location that contains signatures. These          signatures are in the atomic container signature format. The URL will have the digest          of the image appended to it as \"<STORE>/<ALGO>=<DIGEST>/signature-<NUMBER>\" as described          in the container image signing format. The docker-image-manifest section of the          signature must match the release image digest. Signatures are searched starting at          NUMBER 1 and incrementing if the signature exists but is not valid. The signature is a          GPG signed and encrypted JSON message. The file store is provided for testing only at          the current time, although future versions of the CVO might allow host mounting of          signatures. \n See https://github.com/containers/image/blob/ab49b0a48428c623a8f03b41b9083d48966b34a9/docs/signature-protocols.md for a description of the signature store \n The returned verifier will require that any new release image will only be considered verified if each provided public key has signed the release image digest. The signature may be in any store and the lookup order is internally defined. \n If not set, no verification will be performed.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name",
                  "namespace"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the ConfigMap",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the ConfigMap",
                    "type": "string"
                  }
                }
              },
              "serviceProviderCredentialsConfig": {
                "description": "ServiceProviderCredentialsConfig is used to configure credentials related to being a service provider on various cloud platforms.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "aws": {
                    "description": "AWS is used to configure credentials related to being a service provider on AWS.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "credentialsSecretRef": {
                        "description": "CredentialsSecretRef references a secret in the TargetNamespace that will be used to authenticate with AWS to become the Service Provider. Being a Service Provider allows the controllers to assume the role in customer AWS accounts to manager clusters.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "syncSetReapplyInterval": {
                "description": "SyncSetReapplyInterval is a string duration indicating how much time must pass before SyncSet resources will be reapplied. The default reapply interval is two hours.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "targetNamespace": {
                "description": "TargetNamespace is the namespace where the core Hive components should be run. Defaults to \"hive\". Will be created if it does not already exist. All resource references in HiveConfig can be assumed to be in the TargetNamespace.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "status": {
            "description": "HiveConfigStatus defines the observed state of Hive",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "aggregatorClientCAHash": {
                "description": "AggregatorClientCAHash keeps an md5 hash of the aggregator client CA configmap data from the openshift-config-managed namespace. When the configmap changes, admission is redeployed.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "conditions": {
                "description": "Conditions includes more detailed status for the HiveConfig",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "HiveConfigCondition contains details for the current condition of a HiveConfig",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastProbeTime": {
                      "description": "LastProbeTime is the last time we probed the condition.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    },
                    "lastTransitionTime": {
                      "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    },
                    "message": {
                      "description": "Message is a human-readable message indicating details about last transition.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "reason": {
                      "description": "Reason is a unique, one-word, CamelCase reason for the condition's last transition.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "description": "Status is the status of the condition.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type is the type of the condition.",
                      "type": "string"
                    }
                  }
                }
              },
              "configApplied": {
                "description": "ConfigApplied will be set by the hive operator to indicate whether or not the LastGenerationObserved was successfully reconciled.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "observedGeneration": {
                "description": "ObservedGeneration will record the most recently processed HiveConfig object's generation.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "hive.openshift.io",
            "kind": "HiveConfig",
            "version": "v1"
          }
        ]
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "HiveConfigList"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "hive.openshift.io",
      "kind": "HiveConfigList",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}