{
  "description": "ClusterSecretStoreList is a list of ClusterSecretStore",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "external-secrets.io/v1beta1"
      ]
    },
    "items": {
      "description": "List of clustersecretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "items": {
        "description": "ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "external-secrets.io/v1beta1"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "ClusterSecretStore"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties": {
              "annotations": {
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": [
                  "object",
                  "null"
                ]
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "format": "date-time",
                "type": [
                  "string",
                  "null"
                ]
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "format": "int64",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "format": "date-time",
                "type": [
                  "string",
                  "null"
                ]
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": [
                  "array",
                  "null"
                ],
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "format": "int64",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "labels": {
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": [
                  "object",
                  "null"
                ]
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "format": "date-time",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "type": [
                    "object",
                    "null"
                  ],
                  "x-kubernetes-map-type": "atomic"
                },
                "type": [
                  "array",
                  "null"
                ],
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "type": [
              "object",
              "null"
            ]
          },
          "spec": {
            "description": "SecretStoreSpec defines the desired state of SecretStore.",
            "properties": {
              "controller": {
                "description": "Used to select the correct KES controller (think: ingress.ingressClassName) The KES controller is instantiated with a specific controller name and filters ES based on this property",
                "type": [
                  "string",
                  "null"
                ]
              },
              "provider": {
                "description": "Used to configure the provider. Only one provider may be set",
                "maxProperties": 1,
                "minProperties": 1,
                "properties": {
                  "akeyless": {
                    "description": "Akeyless configures this store to sync secrets using Akeyless Vault provider",
                    "properties": {
                      "akeylessGWApiURL": {
                        "description": "Akeyless GW API Url from which the secrets to be fetched from.",
                        "type": "string"
                      },
                      "authSecretRef": {
                        "description": "Auth configures how the operator authenticates with Akeyless.",
                        "properties": {
                          "secretRef": {
                            "description": "AkeylessAuthSecretRef AKEYLESS_ACCESS_TYPE_PARAM: AZURE_OBJ_ID OR GCP_AUDIENCE OR ACCESS_KEY OR KUB_CONFIG_NAME.",
                            "properties": {
                              "accessID": {
                                "description": "The SecretAccessID is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "accessType": {
                                "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "accessTypeParam": {
                                "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "secretRef"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "akeylessGWApiURL",
                      "authSecretRef"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "alibaba": {
                    "description": "Alibaba configures this store to sync secrets using Alibaba Cloud provider",
                    "properties": {
                      "auth": {
                        "description": "AlibabaAuth contains a secretRef for credentials.",
                        "properties": {
                          "secretRef": {
                            "description": "AlibabaAuthSecretRef holds secret references for Alibaba credentials.",
                            "properties": {
                              "accessKeyIDSecretRef": {
                                "description": "The AccessKeyID is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": "object"
                              },
                              "accessKeySecretSecretRef": {
                                "description": "The AccessKeySecret is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "accessKeyIDSecretRef",
                              "accessKeySecretSecretRef"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "secretRef"
                        ],
                        "type": "object"
                      },
                      "endpoint": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "regionID": {
                        "description": "Alibaba Region to be used for the provider",
                        "type": "string"
                      }
                    },
                    "required": [
                      "auth",
                      "regionID"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "aws": {
                    "description": "AWS configures this store to sync secrets using AWS Secret Manager provider",
                    "properties": {
                      "auth": {
                        "description": "Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                        "properties": {
                          "jwt": {
                            "description": "Authenticate against AWS using service account tokens.",
                            "properties": {
                              "serviceAccountRef": {
                                "description": "A reference to a ServiceAccount resource.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the ServiceAccount resource being referred to.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "secretRef": {
                            "description": "AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.",
                            "properties": {
                              "accessKeyIDSecretRef": {
                                "description": "The AccessKeyID is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "secretAccessKeySecretRef": {
                                "description": "The SecretAccessKey is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "region": {
                        "description": "AWS Region to be used for the provider",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role is a Role ARN which the SecretManager provider will assume",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "service": {
                        "description": "Service defines which service should be used to fetch the secrets",
                        "enum": [
                          "SecretsManager",
                          "ParameterStore"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "region",
                      "service"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "azurekv": {
                    "description": "AzureKV configures this store to sync secrets using Azure Key Vault provider",
                    "properties": {
                      "authSecretRef": {
                        "description": "Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.",
                        "properties": {
                          "clientId": {
                            "description": "The Azure clientId of the service principle used for authentication.",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "clientSecret": {
                            "description": "The Azure ClientSecret of the service principle used for authentication.",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "authType": {
                        "description": "Auth type defines how to authenticate to the keyvault service. Valid values are: - \"ServicePrincipal\" (default): Using a service principal (tenantId, clientId, clientSecret) - \"ManagedIdentity\": Using Managed Identity assigned to the pod (see aad-pod-identity)",
                        "enum": [
                          "ServicePrincipal",
                          "ManagedIdentity",
                          "WorkloadIdentity"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "identityId": {
                        "description": "If multiple Managed Identity is assigned to the pod, you can select the one to be used",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "serviceAccountRef": {
                        "description": "ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.",
                        "properties": {
                          "name": {
                            "description": "The name of the ServiceAccount resource being referred to.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "tenantId": {
                        "description": "TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "vaultUrl": {
                        "description": "Vault Url from which the secrets to be fetched from.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "vaultUrl"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "fake": {
                    "description": "Fake configures a store with static key/value pairs",
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueMap": {
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "version": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "data"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "gcpsm": {
                    "description": "GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider",
                    "properties": {
                      "auth": {
                        "description": "Auth defines the information necessary to authenticate against GCP",
                        "properties": {
                          "secretRef": {
                            "properties": {
                              "secretAccessKeySecretRef": {
                                "description": "The SecretAccessKey is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "workloadIdentity": {
                            "properties": {
                              "clusterLocation": {
                                "type": "string"
                              },
                              "clusterName": {
                                "type": "string"
                              },
                              "clusterProjectID": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "serviceAccountRef": {
                                "description": "A reference to a ServiceAccount resource.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the ServiceAccount resource being referred to.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              }
                            },
                            "required": [
                              "clusterLocation",
                              "clusterName",
                              "serviceAccountRef"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "projectID": {
                        "description": "ProjectID project where secret is located",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "gitlab": {
                    "description": "Gitlab configures this store to sync secrets using Gitlab Variables provider",
                    "properties": {
                      "auth": {
                        "description": "Auth configures how secret-manager authenticates with a GitLab instance.",
                        "properties": {
                          "SecretRef": {
                            "properties": {
                              "accessToken": {
                                "description": "AccessToken is used for authentication.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "SecretRef"
                        ],
                        "type": "object"
                      },
                      "projectID": {
                        "description": "ProjectID specifies a project where secrets are located.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "url": {
                        "description": "URL configures the GitLab instance URL. Defaults to https://gitlab.com/.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "auth"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "ibm": {
                    "description": "IBM configures this store to sync secrets using IBM Cloud provider",
                    "properties": {
                      "auth": {
                        "description": "Auth configures how secret-manager authenticates with the IBM secrets manager.",
                        "properties": {
                          "secretRef": {
                            "properties": {
                              "secretApiKeySecretRef": {
                                "description": "The SecretAccessKey is used for authentication",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "secretRef"
                        ],
                        "type": "object"
                      },
                      "serviceUrl": {
                        "description": "ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "auth"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "kubernetes": {
                    "description": "Kubernetes configures this store to sync secrets using a Kubernetes cluster provider",
                    "properties": {
                      "auth": {
                        "description": "Auth configures how secret-manager authenticates with a Kubernetes instance.",
                        "maxProperties": 1,
                        "minProperties": 1,
                        "properties": {
                          "cert": {
                            "description": "has both clientCert and clientKey as secretKeySelector",
                            "properties": {
                              "clientCert": {
                                "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "clientKey": {
                                "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "serviceAccount": {
                            "description": "points to a service account that should be used for authentication",
                            "properties": {
                              "name": {
                                "description": "The name of the ServiceAccount resource being referred to.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "token": {
                            "description": "use static token to authenticate with",
                            "properties": {
                              "bearerToken": {
                                "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "remoteNamespace": {
                        "description": "Remote namespace to fetch the secrets from",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "server": {
                        "description": "configures the Kubernetes server Address.",
                        "properties": {
                          "caBundle": {
                            "description": "CABundle is a base64-encoded CA certificate",
                            "format": "byte",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "caProvider": {
                            "description": "see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider",
                            "properties": {
                              "key": {
                                "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the object located at the provider type.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "The namespace the Provider type is in.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                                "enum": [
                                  "Secret",
                                  "ConfigMap"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "url": {
                            "description": "configures the Kubernetes server Address.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "auth"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "onepassword": {
                    "description": "OnePassword configures this store to sync secrets using the 1Password Cloud provider",
                    "properties": {
                      "auth": {
                        "description": "Auth defines the information necessary to authenticate against OnePassword Connect Server",
                        "properties": {
                          "secretRef": {
                            "description": "OnePasswordAuthSecretRef holds secret references for 1Password credentials.",
                            "properties": {
                              "connectTokenSecretRef": {
                                "description": "The ConnectToken is used for authentication to a 1Password Connect Server.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "connectTokenSecretRef"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "secretRef"
                        ],
                        "type": "object"
                      },
                      "connectHost": {
                        "description": "ConnectHost defines the OnePassword Connect Server to connect to",
                        "type": "string"
                      },
                      "vaults": {
                        "additionalProperties": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "description": "Vaults defines which OnePassword vaults to search in which order",
                        "type": "object"
                      }
                    },
                    "required": [
                      "auth",
                      "connectHost",
                      "vaults"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "oracle": {
                    "description": "Oracle configures this store to sync secrets using Oracle Vault provider",
                    "properties": {
                      "auth": {
                        "description": "Auth configures how secret-manager authenticates with the Oracle Vault. If empty, use the instance principal, otherwise the user credentials specified in Auth.",
                        "properties": {
                          "secretRef": {
                            "description": "SecretRef to pass through sensitive information.",
                            "properties": {
                              "fingerprint": {
                                "description": "Fingerprint is the fingerprint of the API private key.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": "object"
                              },
                              "privatekey": {
                                "description": "PrivateKey is the user's API Signing Key in PEM format, used for authentication.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "fingerprint",
                              "privatekey"
                            ],
                            "type": "object"
                          },
                          "tenancy": {
                            "description": "Tenancy is the tenancy OCID where user is located.",
                            "type": "string"
                          },
                          "user": {
                            "description": "User is an access OCID specific to the account.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "secretRef",
                          "tenancy",
                          "user"
                        ],
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "region": {
                        "description": "Region is the region where vault is located.",
                        "type": "string"
                      },
                      "vault": {
                        "description": "Vault is the vault's OCID of the specific vault where secret is located.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "region",
                      "vault"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "senhasegura": {
                    "description": "Senhasegura configures this store to sync secrets using senhasegura provider",
                    "properties": {
                      "auth": {
                        "description": "Auth defines parameters to authenticate in senhasegura",
                        "properties": {
                          "clientId": {
                            "type": "string"
                          },
                          "clientSecretSecretRef": {
                            "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "clientId",
                          "clientSecretSecretRef"
                        ],
                        "type": "object"
                      },
                      "ignoreSslCertificate": {
                        "description": "IgnoreSslCertificate defines if SSL certificate must be ignored",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "module": {
                        "description": "Module defines which senhasegura module should be used to get secrets",
                        "type": "string"
                      },
                      "url": {
                        "description": "URL of senhasegura",
                        "type": "string"
                      }
                    },
                    "required": [
                      "auth",
                      "module",
                      "url"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "vault": {
                    "description": "Vault configures this store to sync secrets using Hashi provider",
                    "properties": {
                      "auth": {
                        "description": "Auth configures how secret-manager authenticates with the Vault server.",
                        "properties": {
                          "appRole": {
                            "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                            "properties": {
                              "path": {
                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                "type": "string"
                              },
                              "roleId": {
                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                "type": "string"
                              },
                              "secretRef": {
                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "path",
                              "roleId",
                              "secretRef"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "cert": {
                            "description": "Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method",
                            "properties": {
                              "clientCert": {
                                "description": "ClientCert is a certificate to authenticate using the Cert Vault authentication method",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "secretRef": {
                                "description": "SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "jwt": {
                            "description": "Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method",
                            "properties": {
                              "kubernetesServiceAccountToken": {
                                "description": "Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.",
                                "properties": {
                                  "audiences": {
                                    "description": "Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified.",
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "type": [
                                      "array",
                                      "null"
                                    ]
                                  },
                                  "expirationSeconds": {
                                    "description": "Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to 10 minutes.",
                                    "format": "int64",
                                    "type": [
                                      "integer",
                                      "null"
                                    ]
                                  },
                                  "serviceAccountRef": {
                                    "description": "Service account field containing the name of a kubernetes ServiceAccount.",
                                    "properties": {
                                      "name": {
                                        "description": "The name of the ServiceAccount resource being referred to.",
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ],
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "serviceAccountRef"
                                ],
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "path": {
                                "description": "Path where the JWT authentication backend is mounted in Vault, e.g: \"jwt\"",
                                "type": "string"
                              },
                              "role": {
                                "description": "Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "secretRef": {
                                "description": "Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "path"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "kubernetes": {
                            "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                            "properties": {
                              "mountPath": {
                                "description": "Path where the Kubernetes authentication backend is mounted in Vault, e.g: \"kubernetes\"",
                                "type": "string"
                              },
                              "role": {
                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                "type": "string"
                              },
                              "secretRef": {
                                "description": "Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "serviceAccountRef": {
                                "description": "Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the ServiceAccount resource being referred to.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "mountPath",
                              "role"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "ldap": {
                            "description": "Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method",
                            "properties": {
                              "path": {
                                "description": "Path where the LDAP authentication backend is mounted in Vault, e.g: \"ldap\"",
                                "type": "string"
                              },
                              "secretRef": {
                                "description": "SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method",
                                "properties": {
                                  "key": {
                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "name": {
                                    "description": "The name of the Secret resource being referred to.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "username": {
                                "description": "Username is a LDAP user name used to authenticate using the LDAP Vault authentication method",
                                "type": "string"
                              }
                            },
                            "required": [
                              "path",
                              "username"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "tokenSecretRef": {
                            "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "caBundle": {
                        "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                        "format": "byte",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "caProvider": {
                        "description": "The provider for the CA bundle to use to validate Vault server certificate.",
                        "properties": {
                          "key": {
                            "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "The name of the object located at the provider type.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The namespace the Provider type is in.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": {
                            "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                            "enum": [
                              "Secret",
                              "ConfigMap"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ],
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "forwardInconsistent": {
                        "description": "ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "namespace": {
                        "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "path": {
                        "description": "Path is the mount path of the Vault KV backend endpoint, e.g: \"secret\". The v2 KV secret engine version specific \"/data\" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "readYourWrites": {
                        "description": "ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "server": {
                        "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version is the Vault KV secret engine version. This can be either \"v1\" or \"v2\". Version defaults to \"v2\".",
                        "enum": [
                          "v1",
                          "v2"
                        ],
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "auth",
                      "server"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "webhook": {
                    "description": "Webhook configures this store to sync secrets using a generic templated webhook",
                    "properties": {
                      "body": {
                        "description": "Body",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "caBundle": {
                        "description": "PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                        "format": "byte",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "caProvider": {
                        "description": "The provider for the CA bundle to use to validate webhook server certificate.",
                        "properties": {
                          "key": {
                            "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "The name of the object located at the provider type.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "The namespace the Provider type is in.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": {
                            "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                            "enum": [
                              "Secret",
                              "ConfigMap"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ],
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "headers": {
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "description": "Headers",
                        "type": [
                          "object",
                          "null"
                        ]
                      },
                      "method": {
                        "description": "Webhook Method",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "result": {
                        "description": "Result formatting",
                        "properties": {
                          "jsonPath": {
                            "description": "Json path of return value",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "secrets": {
                        "description": "Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name",
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Name of this secret in templates",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Secret ref to fill in credentials",
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "secretRef"
                          ],
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "type": [
                          "array",
                          "null"
                        ]
                      },
                      "timeout": {
                        "description": "Timeout",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "url": {
                        "description": "Webhook url to call",
                        "type": "string"
                      }
                    },
                    "required": [
                      "result",
                      "url"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "yandexcertificatemanager": {
                    "description": "YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider",
                    "properties": {
                      "apiEndpoint": {
                        "description": "Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "auth": {
                        "description": "Auth defines the information necessary to authenticate against Yandex Certificate Manager",
                        "properties": {
                          "authorizedKeySecretRef": {
                            "description": "The authorized key used for authentication",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "caProvider": {
                        "description": "The provider for the CA bundle to use to validate Yandex.Cloud server certificate.",
                        "properties": {
                          "certSecretRef": {
                            "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "auth"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "yandexlockbox": {
                    "description": "YandexLockbox configures this store to sync secrets using Yandex Lockbox provider",
                    "properties": {
                      "apiEndpoint": {
                        "description": "Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "auth": {
                        "description": "Auth defines the information necessary to authenticate against Yandex Lockbox",
                        "properties": {
                          "authorizedKeySecretRef": {
                            "description": "The authorized key used for authentication",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "caProvider": {
                        "description": "The provider for the CA bundle to use to validate Yandex.Cloud server certificate.",
                        "properties": {
                          "certSecretRef": {
                            "description": "A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.",
                            "properties": {
                              "key": {
                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "The name of the Secret resource being referred to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "namespace": {
                                "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "type": [
                              "object",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "auth"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "refreshInterval": {
                "description": "Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "retrySettings": {
                "description": "Used to configure http retries if failed",
                "properties": {
                  "maxRetries": {
                    "format": "int32",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "retryInterval": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "type": [
                  "object",
                  "null"
                ]
              }
            },
            "required": [
              "provider"
            ],
            "type": [
              "object",
              "null"
            ]
          },
          "status": {
            "description": "SecretStoreStatus defines the observed state of the SecretStore.",
            "properties": {
              "conditions": {
                "items": {
                  "properties": {
                    "lastTransitionTime": {
                      "format": "date-time",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "message": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "type"
                  ],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "type": [
                  "array",
                  "null"
                ]
              }
            },
            "type": [
              "object",
              "null"
            ]
          }
        },
        "type": [
          "object",
          "null"
        ],
        "x-kubernetes-group-version-kind": [
          {
            "group": "external-secrets.io",
            "kind": "ClusterSecretStore",
            "version": "v1beta1"
          }
        ]
      },
      "type": [
        "array",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ClusterSecretStoreList"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "format": "int64",
          "type": [
            "integer",
            "null"
          ]
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": [
        "object",
        "null"
      ]
    }
  },
  "required": [
    "items"
  ],
  "x-kubernetes-group-version-kind": [
    {
      "group": "external-secrets.io",
      "kind": "ClusterSecretStoreList",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}