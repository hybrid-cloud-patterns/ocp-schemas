{
  "description": "BuildTriggerPolicy describes a policy for a single trigger that results in a new Build.",
  "properties": {
    "bitbucket": {
      "description": "WebHookTrigger is a trigger that gets invoked using a webhook type of post",
      "properties": {
        "allowEnv": {
          "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "secret": {
          "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
          "type": [
            "string",
            "null"
          ]
        },
        "secretReference": {
          "description": "SecretLocalReference contains information that points to the local secret being used",
          "properties": {
            "name": {
              "description": "Name is the name of the resource in the same namespace being referenced",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false
        }
      },
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": false
    },
    "generic": {
      "description": "WebHookTrigger is a trigger that gets invoked using a webhook type of post",
      "properties": {
        "allowEnv": {
          "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "secret": {
          "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
          "type": [
            "string",
            "null"
          ]
        },
        "secretReference": {
          "description": "SecretLocalReference contains information that points to the local secret being used",
          "properties": {
            "name": {
              "description": "Name is the name of the resource in the same namespace being referenced",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false
        }
      },
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": false
    },
    "github": {
      "description": "WebHookTrigger is a trigger that gets invoked using a webhook type of post",
      "properties": {
        "allowEnv": {
          "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "secret": {
          "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
          "type": [
            "string",
            "null"
          ]
        },
        "secretReference": {
          "description": "SecretLocalReference contains information that points to the local secret being used",
          "properties": {
            "name": {
              "description": "Name is the name of the resource in the same namespace being referenced",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false
        }
      },
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": false
    },
    "gitlab": {
      "description": "WebHookTrigger is a trigger that gets invoked using a webhook type of post",
      "properties": {
        "allowEnv": {
          "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "secret": {
          "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
          "type": [
            "string",
            "null"
          ]
        },
        "secretReference": {
          "description": "SecretLocalReference contains information that points to the local secret being used",
          "properties": {
            "name": {
              "description": "Name is the name of the resource in the same namespace being referenced",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": false
        }
      },
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": false
    },
    "imageChange": {
      "description": "ImageChangeTrigger allows builds to be triggered when an ImageStream changes",
      "properties": {
        "from": {
          "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": [
                "string",
                "null"
              ]
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
              "type": [
                "string",
                "null"
              ]
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "type": [
            "object",
            "null"
          ],
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "lastTriggeredImageID": {
          "description": "lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build This field is deprecated and will be removed in a future release. Deprecated",
          "type": [
            "string",
            "null"
          ]
        },
        "paused": {
          "description": "paused is true if this trigger is temporarily disabled. Optional.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": false
    },
    "type": {
      "description": "type is the type of build trigger. Valid values:\n\n- GitHub GitHubWebHookBuildTriggerType represents a trigger that launches builds on GitHub webhook invocations\n\n- Generic GenericWebHookBuildTriggerType represents a trigger that launches builds on generic webhook invocations\n\n- GitLab GitLabWebHookBuildTriggerType represents a trigger that launches builds on GitLab webhook invocations\n\n- Bitbucket BitbucketWebHookBuildTriggerType represents a trigger that launches builds on Bitbucket webhook invocations\n\n- ImageChange ImageChangeBuildTriggerType represents a trigger that launches builds on availability of a new version of an image\n\n- ConfigChange ConfigChangeBuildTriggerType will trigger a build on an initial build config creation WARNING: In the future the behavior will change to trigger a build on any config change",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "required": [
    "type"
  ],
  "type": "object",
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}